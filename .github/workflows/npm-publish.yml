name: npm-publish

on:
  push:
    branches: main
  workflow_dispatch:
    inputs:
      VERSION_TYPE:
        description: 'Version type to bump (patch, minor, major)'
        required: true
        options: ['patch', 'minor', 'major']
        default: 'patch'

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: '24.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Get version type
        id: get-version-type
        run: |
          echo "Commit message..."
          echo "${{ github.event.head_commit.message }}"
          if [[-n "{{ inputs.VERSION_TYPE }}"]] then
            echo "VERSION_TYPE={{ inputs.VERSION_TYPE }}" >> "$GITHUB_OUTPUT"
            echo "version type from input: ${{ inputs.VERSION_TYPE }}"
          elif [[ "${{ github.event.head_commit.message }}" =~ \#major($| |\n) ]]; then
            echo "VERSION_TYPE=major" >> "$GITHUB_OUTPUT"
            echo "version type commit message: major"
          elif [[ "${{ github.event.head_commit.message }}" =~ \#minor($| |\n) ]]; then
            echo "VERSION_TYPE=minor" >> "$GITHUB_OUTPUT"
            echo "version type commit message: minor"
          elif [[ "${{ github.event.head_commit.message }}" =~ \#patch($| |\n) ]]; then
            echo "VERSION_TYPE=patch" >> "$GITHUB_OUTPUT"
            echo "version type commit message: patch"
          else
            exit 1;
          fi

      - name: Bump version and push tag
        run: |
          echo version type $VERSION_TYPE
          cat package.json
          git config --global user.email "dpohvar@gmail.com"
          git config --global user.name "GITHUB_ACTIONS"
          npm version $VERSION_TYPE
          cat package.json
#          git push origin main --tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION_TYPE: ${{ steps.get-version-type.outputs.VERSION_TYPE }}

#      - name: Install (npm)
#        run: npm clean-install
#
#      - name: Build (npm)
#        run: npm run build
#
#      - name: Publish (npm)
#        run: npm publish --provenance --access public
#        env:
#          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN_FLINBEIN }}


